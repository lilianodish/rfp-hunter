interface ExportData {
  rfpTitle: string;
  analysisDate: string;
  companyName: string;
  score: number;
  decision: string;
  breakdown: {
    geographic: number;
    insurance: number;
    services: number;
    certifications: number;
  };
  missingRequirements: string[];
  analysis: string;
}

export function exportAnalysisAsText(data: ExportData): string {
  const content = `RFP ANALYSIS REPORT
==================

Company: ${data.companyName}
Date: ${data.analysisDate}
RFP: ${data.rfpTitle}

OVERALL SCORE: ${data.score}%
DECISION: ${data.decision}

SCORE BREAKDOWN:
- Geographic Match: ${data.breakdown.geographic}%
- Insurance Match: ${data.breakdown.insurance}%
- Services Match: ${data.breakdown.services}%
- Certifications Match: ${data.breakdown.certifications}%

${data.missingRequirements.length > 0 ? `MISSING REQUIREMENTS:
${data.missingRequirements.map(req => `â€¢ ${req}`).join('\n')}

` : ''}DETAILED ANALYSIS:
${data.analysis}

---
Generated by RFP Hunter v2.0`;

  return content;
}

export function downloadTextFile(content: string, filename: string) {
  const blob = new Blob([content], { type: 'text/plain' });
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = filename;
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
  URL.revokeObjectURL(url);
}